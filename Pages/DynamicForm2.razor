@using System.Reflection;
@page "/Page/{ClassName}"
@if (type != null)
{
    <span>namespance:@type.Namespace</span>
}
<br>
@ClassName

<br>

@* <EditForm EditContext="@editContext" OnSubmit="@HandleSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <InputText id="name" @bind-Value="name" @onblur="changeValue" />

    <button type="submit">Submit</button>
</EditForm> *@
<DynamicForm type="type"></DynamicForm>
@code{
    [Parameter]
    public string ClassName { get; set; }
    public Dictionary<string, object> prps { get; set; } = new Dictionary<string, object>();
    private EditContext editContext;
    TypeInfo type;
    object obj;

    protected override void OnInitialized()
    {
        type = Assembly.GetExecutingAssembly().DefinedTypes.FirstOrDefault(typeInfo => typeInfo.Name == ClassName);

         obj = type.Assembly.CreateInstance(type.FullName);
        editContext = new EditContext(obj);
     


    }

    
    private void HandleSubmit()
    {
        var isValid = editContext.Validate();


    }
 

}
